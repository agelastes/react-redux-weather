{"ast":null,"code":"var _this = this;\n\nexport var addNewCity = function addNewCity() {\n  fetch('http://api.openweathermap.org/data/2.5/weather?q=London&appid=8e3145fe3bc2e2e42c29a6c323b46d41&units=metric').then(function (response) {\n    return response.json();\n  }).then(function (response) {\n    var data = _this.state.dataCity.concat([{\n      name: _this.state.name,\n      temp: response.main.temp,\n      id: response.id,\n      road: response.weather[0].icon\n    }]);\n\n    _this.setState({\n      dataCity: data,\n      temp: response.main.temp,\n      loading: false,\n      id: response.id\n    });\n  });\n  return {\n    type: \"ADD_CITY\",\n    payload: {\n      name: 1,\n      temp: 1.0,\n      src: \"/img/1.img\"\n    }\n  };\n};","map":{"version":3,"sources":["/Users/agelastes/Desktop/app1/src/ac/addNewCity.js"],"names":["addNewCity","fetch","then","response","json","data","state","dataCity","concat","name","temp","main","id","road","weather","icon","setState","loading","type","payload","src"],"mappings":";;AAAC,OAAO,IAAMA,UAAU,GAAG,SAAbA,UAAa,GAAM;AAE5BC,EAAAA,KAAK,CAAC,6GAAD,CAAL,CACKC,IADL,CACU,UAACC,QAAD;AAAA,WAAcA,QAAQ,CAACC,IAAT,EAAd;AAAA,GADV,EAEKF,IAFL,CAEU,UAACC,QAAD,EACN;AAEI,QAAME,IAAI,GAAG,KAAI,CAACC,KAAL,CAAWC,QAAX,CAAoBC,MAApB,CAA2B,CAAC;AAACC,MAAAA,IAAI,EAAE,KAAI,CAACH,KAAL,CAAWG,IAAlB;AAAwBC,MAAAA,IAAI,EAAEP,QAAQ,CAACQ,IAAT,CAAcD,IAA5C;AACrCE,MAAAA,EAAE,EAAET,QAAQ,CAACS,EADwB;AACpBC,MAAAA,IAAI,EAAEV,QAAQ,CAACW,OAAT,CAAiB,CAAjB,EAAoBC;AADN,KAAD,CAA3B,CAAb;;AAEA,IAAA,KAAI,CAACC,QAAL,CAAc;AAACT,MAAAA,QAAQ,EAAEF,IAAX;AAAiBK,MAAAA,IAAI,EAAEP,QAAQ,CAACQ,IAAT,CAAcD,IAArC;AAA2CO,MAAAA,OAAO,EAAE,KAApD;AAA2DL,MAAAA,EAAE,EAAET,QAAQ,CAACS;AAAxE,KAAd;AAEH,GATL;AAWD,SAAO;AACHM,IAAAA,IAAI,EAAE,UADH;AAEHC,IAAAA,OAAO,EAAE;AACLV,MAAAA,IAAI,EAAE,CADD;AAELC,MAAAA,IAAI,EAAE,GAFD;AAGLU,MAAAA,GAAG,EAAE;AAHA;AAFN,GAAP;AAQF,CArBM","sourcesContent":[" export const addNewCity = () => {\n\n     fetch('http://api.openweathermap.org/data/2.5/weather?q=London&appid=8e3145fe3bc2e2e42c29a6c323b46d41&units=metric')\n         .then((response) => response.json())\n         .then((response) =>\n         {\n\n             const data = this.state.dataCity.concat([{name: this.state.name, temp: response.main.temp,\n                 id: response.id, road: response.weather[0].icon}]);\n             this.setState({dataCity: data, temp: response.main.temp, loading: false, id: response.id});\n\n         });\n\n    return {\n        type: \"ADD_CITY\",\n        payload: {\n            name: 1,\n            temp: 1.0,\n            src: \"/img/1.img\"\n        }\n    }\n };"]},"metadata":{},"sourceType":"module"}