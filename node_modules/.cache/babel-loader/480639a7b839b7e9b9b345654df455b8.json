{"ast":null,"code":"import _toConsumableArray from \"/Users/agelastes/Desktop/app1/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { ADD_CITY } from \"../constants/cityConstants\";\nimport { DELETE_CITY } from \"../constants/cityConstants\";\nimport { ERROR } from \"../constants/cityConstants\";\nexport var addCity = function addCity() {\n  var stateCity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    citys: [],\n    error: false\n  };\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  console.log(action);\n  if (action.type === ADD_CITY) stateCity = [].concat(_toConsumableArray(stateCity), [action.payload]);\n\n  if (action.type === DELETE_CITY) {\n    stateCity = stateCity.filter(function (city) {\n      return city.id !== action.id;\n    });\n    console.log(stateCity);\n  }\n\n  if (action.type === ERROR) {\n    stateCity.push();\n    console.log(stateCity);\n  }\n\n  return stateCity;\n};","map":{"version":3,"sources":["/Users/agelastes/Desktop/app1/src/reducers/addCity.js"],"names":["ADD_CITY","DELETE_CITY","ERROR","addCity","stateCity","citys","error","action","console","log","type","payload","filter","city","id","push"],"mappings":";AAAA,SAASA,QAAT,QAAyB,4BAAzB;AACA,SAASC,WAAT,QAA4B,4BAA5B;AACA,SAASC,KAAT,QAAsB,4BAAtB;AAGA,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAmD;AAAA,MAAlDC,SAAkD,uEAAtC;AAACC,IAAAA,KAAK,EAAE,EAAR;AAAYC,IAAAA,KAAK,EAAE;AAAnB,GAAsC;AAAA,MAAXC,MAAW;AAEtEC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AAEI,MAAIA,MAAM,CAACG,IAAP,KAAgBV,QAApB,EAA8BI,SAAS,gCAAOA,SAAP,IAAkBG,MAAM,CAACI,OAAzB,EAAT;;AAE9B,MAAIJ,MAAM,CAACG,IAAP,KAAgBT,WAApB,EACA;AACIG,IAAAA,SAAS,GAAGA,SAAS,CAACQ,MAAV,CAAiB,UAAAC,IAAI;AAAA,aAAIA,IAAI,CAACC,EAAL,KAAYP,MAAM,CAACO,EAAvB;AAAA,KAArB,CAAZ;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAYL,SAAZ;AACH;;AAED,MAAIG,MAAM,CAACG,IAAP,KAAgBR,KAApB,EACA;AACIE,IAAAA,SAAS,CAACW,IAAV;AACAP,IAAAA,OAAO,CAACC,GAAR,CAAYL,SAAZ;AACH;;AAED,SAAOA,SAAP;AAEP,CApBM","sourcesContent":["import { ADD_CITY } from \"../constants/cityConstants\";\nimport { DELETE_CITY } from \"../constants/cityConstants\";\nimport { ERROR } from \"../constants/cityConstants\";\n\n\nexport const addCity = (stateCity = {citys: [], error: false}, action) => {\n\n    console.log(action);\n\n        if (action.type === ADD_CITY) stateCity = [...stateCity, action.payload];\n\n        if (action.type === DELETE_CITY)\n        {\n            stateCity = stateCity.filter(city => city.id !== action.id);\n            console.log(stateCity);\n        }\n\n        if (action.type === ERROR)\n        {\n            stateCity.push();\n            console.log(stateCity);\n        }\n\n        return stateCity;\n\n};"]},"metadata":{},"sourceType":"module"}