{"ast":null,"code":"import _toConsumableArray from \"/Users/agelastes/Code/app1/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/agelastes/Code/app1/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/agelastes/Code/app1/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/agelastes/Code/app1/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/agelastes/Code/app1/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/agelastes/Code/app1/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/agelastes/Code/app1/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport WeatherList from './WeatherList';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      loading: false,\n      name: null,\n      temp: null,\n      id: null,\n      dataCity: []\n    };\n\n    _this.inputRead = function (e) {\n      _this.setState({\n        name: e.target.value\n      });\n    };\n\n    _this.requestCity = function () {\n      _this.setState({\n        loading: true\n      });\n\n      fetch('http://api.openweathermap.org/data/2.5/weather?q=' + _this.state.name + '&appid=8e3145fe3bc2e2e42c29a6c323b46d41&units=metric').then(function (response) {\n        return response.json();\n      }).then(function (response) {\n        var data = _this.state.dataCity.concat([{\n          name: _this.state.name,\n          temp: response.main.temp,\n          id: response.id,\n          road: response.weather[0].icon\n        }]);\n\n        _this.setState({\n          dataCity: data,\n          temp: response.main.temp,\n          loading: false,\n          id: response.id\n        });\n      });\n    };\n\n    _this.clearDashboard = function () {\n      _this.setState({\n        dataCity: [],\n        name: null,\n        temp: null,\n        loading: false\n      });\n\n      _this.refs.inputCity.value = \"\";\n    };\n\n    _this.deleteCity = function (id) {\n      var data = _toConsumableArray(_this.state.dataCity);\n\n      data.filter(function () {});\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (this.temp === null && this.state.loading) return null;else return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"Input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"InputCityName\",\n        onChange: this.inputRead,\n        placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u0433\\u043E\\u0440\\u043E\\u0434\\u0430\",\n        ref: \"inputCity\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        className: \"GetCity\",\n        type: \"Button\",\n        value: \"Send\",\n        onClick: this.requestCity,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        className: \"Cleaner\",\n        type: \"Button\",\n        value: \"Delete\",\n        onClick: this.clearDashboard,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      })), React.createElement(WeatherList, {\n        data: this.state.dataCity,\n        deleteItem: function deleteItem() {\n          return _this2.deleteCity();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/agelastes/Code/app1/src/App.js"],"names":["React","Component","WeatherList","App","state","loading","name","temp","id","dataCity","inputRead","e","setState","target","value","requestCity","fetch","then","response","json","data","concat","main","road","weather","icon","clearDashboard","refs","inputCity","deleteCity","filter"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport WeatherList from './WeatherList';\n\n\n\nclass App extends Component {\n\n\n  state = {\n      loading: false,\n      name: null,\n      temp: null,\n      id: null,\n      dataCity: []\n  };\n\n  inputRead = (e) => {\n    this.setState({name: e.target.value});\n  };\n\n  requestCity = () => {\n    this.setState({loading: true});\n\n    fetch('http://api.openweathermap.org/data/2.5/weather?q='\n        + this.state.name +\n        '&appid=8e3145fe3bc2e2e42c29a6c323b46d41&units=metric')\n        .then((response) => response.json())\n        .then((response) =>\n        {\n\n          const data = this.state.dataCity.concat([{name: this.state.name, temp: response.main.temp,\n              id: response.id, road: response.weather[0].icon}]);\n          this.setState({dataCity: data, temp: response.main.temp, loading: false, id: response.id});\n\n        });\n\n  };\n\n  clearDashboard = () => {\n\n      this.setState({dataCity: [], name: null, temp: null, loading: false});\n      this.refs.inputCity.value = \"\";\n\n  };\n\n  deleteCity = (id) => {\n\n        const data = [...this.state.dataCity];\n        data.filter(function () {\n            \n        })\n\n  };\n\n\n\n  render() {\n\n    if ((this.temp === null) && (this.state.loading)) return null;\n\n    else return (\n          <div className=\"App\">\n              <div className=\"Input\">\n                  <input className=\"InputCityName\" onChange={this.inputRead} placeholder=\"Введите название города\"\n                         ref=\"inputCity\">\n\n                  </input>\n                  <input className=\"GetCity\" type=\"Button\" value=\"Send\" onClick={this.requestCity}>\n                  </input>\n\n                  <input className=\"Cleaner\" type=\"Button\" value=\"Delete\" onClick={this.clearDashboard}>\n                  </input>\n              </div>\n\n\n              <WeatherList data={this.state.dataCity} deleteItem={() => this.deleteCity()}/>\n\n          </div>\n      );\n  }\n\n\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}