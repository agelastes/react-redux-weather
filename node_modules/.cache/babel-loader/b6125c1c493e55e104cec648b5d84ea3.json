{"ast":null,"code":"import _classCallCheck from \"/Users/agelastes/Desktop/app1/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/agelastes/Desktop/app1/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/agelastes/Desktop/app1/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/agelastes/Desktop/app1/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/agelastes/Desktop/app1/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/agelastes/Desktop/app1/src/App.js\";\nimport React, { Component } from 'react';\nimport { addNewCity } from \"./ac/addNewCity\";\nimport { connect } from \"react-redux\";\nimport './App.css';\nimport { applyMiddleware as dispatch } from \"redux\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.editName = function (e) {\n      var name = e.target.value;\n      console.log(name);\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        onChange: this.editName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.props.getCity,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, \"add\"));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    dataCity: state.city,\n    getCity: function getCity() {\n      dispatch(addNewCity());\n    }\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps() {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/agelastes/Desktop/app1/src/App.js"],"names":["React","Component","addNewCity","connect","applyMiddleware","dispatch","App","editName","e","name","target","value","console","log","props","getCity","mapStateToProps","state","dataCity","city","mapDispatchToProps"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,iBAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,WAAP;AACA,SAAQC,eAAe,IAAIC,QAA3B,QAA0C,OAA1C;;IAEMC,G;;;;;;;;;;;;;;;;;;UAEFC,Q,GAAW,UAACC,CAAD,EAAO;AACd,UAAMC,IAAI,GAAGD,CAAC,CAACE,MAAF,CAASC,KAAtB;AAEAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACH,K;;;;;;;6BAEM;AACP,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,QAAQ,EAAE,KAAKF,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAQ,QAAA,OAAO,EAAE,KAAKO,KAAL,CAAWC,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF,CADF;AAMD;;;;EAfed,S;;AAkBlB,IAAMe,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD;AAAA,SAAY;AAChCC,IAAAA,QAAQ,EAAED,KAAK,CAACE,IADgB;AAEhCJ,IAAAA,OAAO,EAAE,mBAAM;AACXV,MAAAA,QAAQ,CAACH,UAAU,EAAX,CAAR;AACH;AAJ+B,GAAZ;AAAA,CAAxB;;AAOA,IAAMkB,kBAAkB,GAAG,SAArBA,kBAAqB;AAAA,SAAO,EAAP;AAAA,CAA3B;;AAIA,eAAejB,OAAO,CAACa,eAAD,EAAkBI,kBAAlB,CAAP,CAA6Cd,GAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { addNewCity } from \"./ac/addNewCity\";\nimport { connect } from \"react-redux\";\nimport './App.css';\nimport {applyMiddleware as dispatch} from \"redux\";\n\nclass App extends Component {\n\n    editName = (e) => {\n        const name = e.target.value;\n\n        console.log(name);\n    };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <input onChange={this.editName}/>\n        <button onClick={this.props.getCity}>add</button>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n    dataCity: state.city,\n    getCity: () => {\n        dispatch(addNewCity());\n    }\n});\n\nconst mapDispatchToProps = () => ({\n});\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}